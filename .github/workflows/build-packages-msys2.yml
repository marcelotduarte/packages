name: Build packages msys2

on:
  workflow_call:
    inputs:
      branch:
        default: develop
        required: true
        type: string
  workflow_dispatch:
    inputs:
      branch:
        default: develop
        required: true
        type: choice
        options:
          - develop
          - main

jobs:

  build_sdist:
    strategy:
      fail-fast: false
    name: Build sdist cx-freeze
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      UV_SYSTEM_PYTHON: true
    steps:

      - name: 'üß∞ Checkout'
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.branch }}
          repository: marcelotduarte/cx_Freeze

      - name: '‚öôÔ∏è Set up Python'
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: '‚öôÔ∏è Set up uv'
        uses: astral-sh/setup-uv@v7
        with:
          cache-dependency-glob: "pyproject.toml"
          enable-cache: true

      - name: 'üöß Build source distribution'
        run: uv build --sdist -o wheelhouse

      - name: 'üì§ Upload artifact: sdist'
        uses: actions/upload-artifact@v4
        with:
          name: cx-freeze-sdist
          path: wheelhouse
          compression-level: 0  # no compression

  build_sdist_freeze_core:
    strategy:
      fail-fast: false
    name: Build sdist freeze-core
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      UV_SYSTEM_PYTHON: true
    steps:

      - name: 'üß∞ Checkout'
        uses: actions/checkout@v5
        with:
          #ref: ${{ inputs.branch }}
          repository: marcelotduarte/freeze-core

      - name: '‚öôÔ∏è Set up Python'
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: '‚öôÔ∏è Set up uv'
        uses: astral-sh/setup-uv@v7
        with:
          cache-dependency-glob: "pyproject.toml"
          enable-cache: true

      - name: 'üöß Build source distribution'
        run: uv build --sdist -o wheelhouse

      - name: 'üì§ Upload artifact: sdist'
        uses: actions/upload-artifact@v4
        with:
          name: freeze-core-sdist
          path: wheelhouse
          compression-level: 0  # no compression

  build_msys2:
    needs:
      - build_sdist
      - build_sdist_freeze_core
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: windows-latest, sys: ucrt64,  env: ucrt-x86_64, icon: 'üü®' }
          - { os: windows-11-arm, sys: clangarm64, env: clang-aarch64, icon: 'üüß' }
          - { os: windows-latest, sys: mingw64, env: x86_64, icon: 'üü¶' }
          - { os: windows-latest, sys: mingw32, env: i686, icon: ‚¨õ' }
          - { os: windows-latest, sys: clang64, env: clang-x86_64, icon: 'üüß' }
    name: Build [${{ matrix.sys }} ${{ matrix.env }}]
    defaults:
      run:
        shell: msys2 {0}
    env:
      MINGW_ARCH: ${{ matrix.sys }}
    runs-on: ${{ matrix.os }}
    steps:

      - name: '‚öôÔ∏è git config'
        run: git config --global core.autocrlf input
        shell: bash

      - name: 'üß∞ Checkout'
        uses: actions/checkout@v5

      - name: '${{ matrix.icon }} Setup MSYS2'
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          install: base-devel
          update: true

      - name: ' Download artifact: freeze-core-sdist'
        uses: actions/download-artifact@v5
        with:
          name: freeze-core-sdist

      - name: 'üöß Build package: freeze-core'
        run: |
          PKGVER=$(ls freeze_core-*.tar.gz | awk -F- '{print $2}' | awk -F.tar.gz '{print $1}')
          sed -i "s/pkgver=.*/pkgver=$PKGVER/" PKGBUILD
          makepkg-mingw -sCLf --noconfirm --noprogressbar -p PKGBUILD-core
          #mv src/python-test-core/.coverage .coverage.${{ matrix.sys }}-core

      - name: ' Download artifact: cx-freeze-sdist'
        uses: actions/download-artifact@v5
        with:
          name: cx-freeze-sdist

      - name: 'üöß Build package: cx-freeze'
        run: |
          PKGVER=$(ls cx_freeze-*.tar.gz | awk -F- '{print $2}' | awk -F.tar.gz '{print $1}')
          sed -i "s/pkgver=.*/pkgver=$PKGVER/" PKGBUILD
          makepkg-mingw -sCLf --noconfirm --noprogressbar
          mv src/python-test/.coverage .coverage.${{ matrix.sys }}

      - name: 'üì§ Upload artifact: package'
        uses: actions/upload-artifact@v4
        with:
          name: cx-freeze-msys2-${{ matrix.sys }}
          path: |
            mingw-w64-*.zst
            mingw-w64-*.zst.sig
            .coverage.*
          include-hidden-files: true
