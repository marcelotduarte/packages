name: Build wheel (LIEF)

on:
  workflow_call:
  workflow_dispatch:

env:
  LIEF_TAG: '0.17.1'
  python-version-sdk: '3.10'
  SCCACHE_DIR: 'C:\Users\runner\AppData\Local\Mozilla\sccache'
  
jobs:
  build-sdk:
    runs-on: windows-2025
    strategy:
      matrix:
        #arch: ['x64', 'x86']
        arch: ['x64']
      fail-fast: false
    env:
      SCCACHE_CACHE_SIZE: 2G
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          repository: lief-project/LIEF
          ref: ${{ env.LIEF_TAG }}

      - uses: actions/setup-python@v6
        with:
          python-version: ${{ env.python-version-sdk }}
          architecture: ${{ matrix.arch }}

      - name: Install system dependencies
        run: |
          choco install ninja
          choco install sccache
          python -m pip install --upgrade pip setuptools

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
          vsversion: "2022"

      - name: Get Date
        id: get-date
        run: |
          echo "date=$(/bin/date -u "+%Y-%m-%d-%H;%M;%S")" >> $GITHUB_OUTPUT
        shell: bash

      - name: Setup sccache
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: ${{ env.SCCACHE_DIR }}
          key: ${{ runner.os }}-${{ matrix.arch }}-sccache-sdk-${{ steps.get-date.outputs.date }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-sccache-sdk

      - name: Start sccache server
        run: sccache --start-server

      - name: Build SDK
        run: |
          sed -i 's/msvc14_get_vc_env(arch)/EnvironmentInfo(arch).return_env()/' ./scripts/windows/package_sdk.py
          python ./scripts/windows/package_sdk.py
        shell: bash

      - name: 'Upload SDK artifact'
        uses: actions/upload-artifact@v5
        with:
          name: windows-${{ matrix.arch }}-sdk
          path: build/*.zip
          retention-days: 3

      - name: 'Upload install artifact'
        uses: actions/upload-artifact@v5
        with:
          name: windows-${{ matrix.arch }}-install
          path: ${{ runner.temp }}/lief-install
          retention-days: 1

      - name: sccache stats
        run: sccache --show-stats

      - name: stop sccache server
        run: sccache --stop-server || true

  wheels:
    runs-on: windows-2025
    needs: build-sdk
    strategy:
      matrix:
        #arch: ['x64', 'x86']
        #python-version: ['3.13', '3.13t']
        arch: ['x64']
        python-version: ['3.13t', '3.14t']
      fail-fast: false
    env:
      SCCACHE_CACHE_SIZE: 2G
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          repository: lief-project/LIEF
          ref: ${{ env.LIEF_TAG }}

      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}

      - name: Install system dependencies
        run: |
          choco install ninja
          choco install sccache
          python -m pip install --upgrade pip setuptools

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
          vsversion: "2022"

      - name: Get Date
        id: get-date
        run: |
          echo "date=$(/bin/date -u "+%Y-%m-%d-%H;%M;%S")" >> $GITHUB_OUTPUT
        shell: bash

      - name: Save sccache
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: ${{ env.SCCACHE_DIR }}
          key: ${{ runner.os }}-${{ matrix.arch }}-sccache-${{ matrix.python-version }}-${{ steps.get-date.outputs.date }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-sccache-${{ matrix.python-version }}

      - name: Download LIEF install dir
        uses: actions/download-artifact@v6
        with:
          name: windows-${{ matrix.arch }}-install
          path: ~/lief-${{ matrix.arch }}-install

      - name: Start sccache server
        run: sccache --start-server

      - name: Set arch specific env
        if: matrix.arch == 'x64'
        run: echo "ARCH=x64" >> $env:GITHUB_ENV

      - name: Set arch specific env
        if: matrix.arch == 'x86'
        run: echo "ARCH=x86" >> $env:GITHUB_ENV

      - name: Set Python config (${{ matrix.arch }})
        run: echo ("PYLIEF_CONF=" + $env:GITHUB_WORKSPACE + "/scripts/windows/py-" + $env:ARCH + ".toml") >> $env:GITHUB_ENV

      - name: Set env variables
        run: chcp 65001 #set code page to utf-8

      - name: Build Python ${{ matrix.python-version }}
        run: |
          sed -i 's/pydantic==2.11.3/pydantic/' ./api/python/build-requirements.txt
          pip -vvv wheel --wheel-dir=dist/ ./api/python
        shell: bash

      - name: 'Upload Python artifacts [${{ matrix.python-version }}]'
        uses: actions/upload-artifact@v5
        with:
          name: lief-windows-${{ matrix.arch }}-wheel-${{ matrix.python-version }}
          path: dist/*.whl
          retention-days: 3
